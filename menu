├── main.c         // Inicia o menu
├── menu.c
├── menu.h
├── game.c
├── game.h
├── font.ttf       // Fonte para o menu
[09:34, 27/05/2025] Natanael: #ifndef MENU_H
#define MENU_H

#include <SDL2/SDL.h>
#include <SDL2/SDL_ttf.h>

int runMenu(SDL_Window *window, SDL_Renderer *renderer);

#endif
[09:35, 27/05/2025] Natanael: #include "menu.h"
#include "game.h"

#define SCREEN_WIDTH 640
#define SCREEN_HEIGHT 480

typedef enum {
    MENU_START,
    MENU_QUIT,
    MENU_NONE
} MenuOption;

typedef struct {
    SDL_Rect rect;
    char label[32];
} Button;

bool pointInRect(int x, int y, SDL_Rect *r) {
    return x >= r->x && x <= (r->x + r->w) && y >= r->y && y <= (r->y + r->h);
}

void renderText(SDL_Renderer *renderer, TTF_Font *font, const char *text, int x, int y) {
    SDL_Color color = {255, 255, 255, 255};
    SDL_Surface *surface = TTF_RenderText_Solid(font, text, color);
    SDL_Texture *texture = SDL_CreateTextureFromSurface(renderer, surface);
    SDL_Rect dst = {x, y, surface->w, surface->h};
    SDL_RenderCopy(renderer, texture, NULL, &dst);
    SDL_FreeSurface(surface);…
[09:35, 27/05/2025] Natanael: #ifndef GAME_H
#define GAME_H

#include <SDL2/SDL.h>

void runGame(SDL_Renderer *renderer);

#endif
[09:35, 27/05/2025] Natanael: #include "game.h"
#include <stdbool.h>

void runGame(SDL_Renderer *renderer) {
    SDL_SetRenderDrawColor(renderer, 0, 0, 30, 255);
    SDL_RenderClear(renderer);

    SDL_RenderPresent(renderer);

    SDL_Event event;
    bool running = true;

    while (running) {
        while (SDL_PollEvent(&event)) {
            if (event.type == SDL_QUIT || (event.type == SDL_KEYDOWN && event.key.keysym.sym == SDLK_ESCAPE)) {
                running = false;
            }
        }

        // Aqui entrará a lógica e renderização do jogo
        SDL_SetRenderDrawColor(renderer, 0, 0, 30, 255);
        SDL_RenderClear(renderer);
        SDL_RenderPresent(renderer);

        SDL_Delay(16);
    }
}
[09:35, 27/05/2025] Natanael: #include <SDL2/SDL.h>
#include <SDL2/SDL_ttf.h>
#include "menu.h"

int main() {
    SDL_Init(SDL_INIT_VIDEO);
    TTF_Init();

    SDL_Window *window = SDL_CreateWindow("LLETRIS",
                                          SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED,
                                          640, 480,
                                          SDL_WINDOW_SHOWN);

    SDL_Renderer *renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);

    int result = runMenu(window, renderer);

    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    TTF_Quit();
    SDL_Quit();

    return result;
}
